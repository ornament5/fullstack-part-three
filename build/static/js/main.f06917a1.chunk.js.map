{"version":3,"sources":["personService.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","name","number","post","id","updatedPerson","put","delete","status","Filter","searchValue","changeHandler","value","onChange","PersonForm","nameValue","nameChangedHandler","numberValue","numberChangedHandler","submitHandler","onSubmit","type","Button","clickHandler","text","onClick","Person","person","deleteHandler","Persons","persons","filter","toLowerCase","indexOf","map","key","Alert","className","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","newFilter","setNewFilter","alert","setAlert","useEffect","personService","showAlert","setTimeout","isNameDuplicate","personsList","some","e","target","preventDefault","window","confirm","personToUpdate","find","catch","error","errorMessage","errors","message","createdPerson","concat","personName","ReactDOM","render","document","getElementById"],"mappings":"0OAEMA,EAAU,eAsBD,EApBA,WACX,OAAOC,IAAMC,IAAIF,GACRG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAkBxB,EAfA,SAACC,EAAMC,GAClB,OAAON,IAAMO,KAAKR,EAAS,CAACM,OAAMC,WACzBJ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAaxB,EALA,SAACI,EAAIC,GAClB,OAAOT,IAAMU,IAAN,UAAaX,EAAb,YAAwBS,GAAMC,GAClCP,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAGhB,EAVA,SAACI,GACZ,OAAOR,IAAMW,OAAN,UAAgBZ,EAAhB,YAA2BS,IACjCN,MAAK,SAAAC,GAAQ,OAAIA,EAASS,WCZzBC,G,MAAS,SAAC,GAAkC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,cAC1B,OACE,mDACqB,2BAAOC,MAAOF,EAAaG,SAAUF,OAK1DG,EAAa,SAAC,GAAuF,IAAtFC,EAAqF,EAArFA,UAAWC,EAA0E,EAA1EA,mBAAoBC,EAAsD,EAAtDA,YAAaC,EAAyC,EAAzCA,qBAAsBC,EAAmB,EAAnBA,cACrF,OACE,0BAAMC,SAAUD,GACd,yCACA,sCACQ,2BAAOP,MAAOG,EAAWF,SAAUG,KAE3C,wCACU,2BAAOJ,MAAOK,EAAaJ,SAAUK,KAE/C,6BACE,4BAAQG,KAAK,UAAb,UAMFC,EAAS,SAAC,GAA0B,IAAzBC,EAAwB,EAAxBA,aAAcC,EAAU,EAAVA,KAC7B,OAAO,4BAAQC,QAASF,GAAeC,IAGnCE,EAAS,SAAC,GAA6B,IAA5BC,EAA2B,EAA3BA,OAAQC,EAAmB,EAAnBA,cACvB,OAAO,2BAAID,EAAO1B,KAAX,IAAkB0B,EAAOzB,OAAzB,IAAiC,kBAAC,EAAD,CAAQsB,KAAK,SAASD,aAAc,kBAAMK,EAAcD,EAAOvB,SAGnGyB,EAAU,SAAC,GAAsC,IAArCC,EAAoC,EAApCA,QAASC,EAA2B,EAA3BA,OAAQH,EAAmB,EAAnBA,cACjC,OAAOE,EACFC,QAAO,SAAAJ,GAAM,OAAiE,IAA7DA,EAAO1B,KAAK+B,cAAcC,QAAQF,EAAOC,kBAC1DE,KAAI,SAAAP,GAAM,OAAI,kBAAC,EAAD,CAAQQ,IAAKR,EAAOvB,GAAIuB,OAAQA,EAAQC,cAAeA,QAGtEQ,EAAQ,SAAC,GAAkB,IAAjBf,EAAgB,EAAhBA,KAAMG,EAAU,EAAVA,KACpB,OAAY,OAATA,EACM,KAEA,yBAAKa,UAAS,UAAKhB,EAAL,WAAoBG,IAyG9Bc,EArGH,WAAO,IAAD,EACgBC,mBAAS,IADzB,mBACRT,EADQ,KACCU,EADD,OAEgBD,mBAAS,IAFzB,mBAERE,EAFQ,KAECC,EAFD,OAGoBH,mBAAS,IAH7B,mBAGRI,EAHQ,KAGGC,EAHH,OAIoBL,mBAAS,IAJ7B,mBAIRM,EAJQ,KAIGC,EAJH,OAKYP,mBAAS,CAAClB,KAAK,KAAMG,KAAK,OALtC,mBAKRuB,EALQ,KAKDC,EALC,KAOhBC,qBAAU,WACRC,IACGpD,MAAM,SAAAgC,GAAO,OAAIU,EAAWV,QAC9B,IAEH,IA+DMqB,EAAY,SAAC9B,EAAMG,GACvBwB,EAAS,CAAC3B,OAAMG,SAChB4B,YAAW,kBAAMJ,EAAS,CAAC3B,KAAK,KAAMG,KAAK,SAAO,MAG9C6B,EAAkB,SAACZ,EAASa,GAChC,OAAOA,EAAYC,MAAK,SAAC5B,GAAD,OAAYA,EAAO1B,OAASwC,MAGtD,OACE,6BACE,yCACA,kBAAC,EAAD,CAAOpB,KAAM0B,EAAM1B,KAAMG,KAAMuB,EAAMvB,OACrC,kBAAC,EAAD,CAAQd,YAAamC,EAAWlC,cApET,SAAA6C,GACzBV,EAAaU,EAAEC,OAAO7C,UAoEpB,kBAAC,EAAD,CACEG,UAAW0B,EACXzB,mBA/EmB,SAAAwC,GACvBd,EAAWc,EAAEC,OAAO7C,QA+EhBK,YAAa0B,EACbzB,qBA7EqB,SAAAsC,GACzBZ,EAAaY,EAAEC,OAAO7C,QA6ElBO,cAtEmB,SAAAqC,GAEvB,GADAA,EAAEE,iBACc,KAAZjB,EACF,GAAIY,EAAgBZ,EAASX,IAE3B,GAD8B6B,OAAOC,QAAP,UAAkBnB,EAAlB,iFACH,CACzB,IAAMoB,EAAiB/B,EAAQgC,MAAK,SAAAnC,GAAM,OAAIA,EAAO1B,OAASwC,KACxDpC,EAAa,2BAAOwD,GAAP,IAAuB3D,OAAOyC,IACjDO,EAAqBW,EAAezD,GAAIC,GACrCP,MAAK,SAAAO,GACJmC,EAAWV,EAAQI,KAAI,SAAAP,GAAM,OAAIA,EAAOvB,KAAOC,EAAcD,GAAKC,EAAgBsB,MAClFe,EAAW,IACXE,EAAa,OAEdmB,OAAM,SAACC,GACN,IAAIC,EAAY,yBAAqBxB,EAArB,yCACZuB,EAAMjE,SAASC,KAAKgE,MAAME,OAAOhE,QACc,mBAAjD8D,EAAMjE,SAASC,KAAKgE,MAAME,OAAOhE,OAAOD,OACtCgE,EAAeD,EAAMjE,SAASC,KAAKgE,MAAMG,SAE7ChB,EAAU,QAASc,YAIzBf,EAAqBT,EAASE,GAC7B7C,MAAK,SAAAsE,GACJ5B,EAAWV,EAAQuC,OAAOD,IAC1BjB,EAAU,UAAD,gBAAqBV,IAC9BC,EAAW,IACXE,EAAa,OAEdmB,OAAM,SAAAC,GACLb,EAAU,QAASa,EAAMjE,SAASC,KAAKgE,MAAMG,eAuCjD,uCACA,kBAAC,EAAD,CAASrC,QAASA,EAASC,OAAQc,EAAWjB,cAlCvB,SAACxB,GAC1B,IAAMkE,EAAaxC,EAAQgC,MAAK,SAAAnC,GAAM,OAAIA,EAAOvB,KAAOA,KAAIH,KACpC0D,OAAOC,QAAP,iBAAyBU,EAAzB,OAEtBpB,EAAqB9C,GACpBN,MAAK,SAAAU,GACW,MAAXA,GACFgC,EAAWV,EAAQC,QAAO,SAAAJ,GAAM,OAAIA,EAAOvB,KAAOA,cCnH5DmE,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,W","file":"static/js/main.f06917a1.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst baseUrl = '/api/persons';\r\n\r\nconst getAll = () => {\r\n    return axios.get(baseUrl)\r\n            .then(response => response.data);\r\n};\r\n\r\nconst create = (name, number) => {\r\n    return axios.post(baseUrl, {name, number})\r\n            .then(response => response.data);\r\n}\r\n\r\nconst remove = (id) => {\r\n    return axios.delete(`${baseUrl}/${id}`)\r\n    .then(response => response.status);   \r\n}\r\n\r\nconst update = (id, updatedPerson) => {\r\n  return axios.put(`${baseUrl}/${id}`, updatedPerson)\r\n    .then(response => response.data); \r\n}\r\n\r\nexport default {getAll, create, update, remove};","import React, { useState, useEffect } from 'react';\r\nimport personService from './personService';\r\nimport './App.css';\r\n\r\nconst Filter = ({searchValue, changeHandler}) => {\r\n    return (\r\n      <div>\r\n        filter shown with: <input value={searchValue} onChange={changeHandler}/>\r\n      </div>\r\n    );\r\n};\r\n\r\nconst PersonForm = ({nameValue, nameChangedHandler, numberValue, numberChangedHandler, submitHandler}) => {\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <h3>add a new</h3>\r\n      <div>\r\n        name: <input value={nameValue} onChange={nameChangedHandler}/>\r\n      </div>\r\n      <div>\r\n        number: <input value={numberValue} onChange={numberChangedHandler}/>\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\" >add</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst Button = ({clickHandler, text}) => {\r\n  return <button onClick={clickHandler}>{text}</button>\r\n};\r\n\r\nconst Person = ({person, deleteHandler}) => {\r\n  return <p>{person.name} {person.number} <Button text='delete' clickHandler={() => deleteHandler(person.id)} /></p>\r\n};\r\n\r\nconst Persons = ({persons, filter, deleteHandler}) => {\r\n  return persons\r\n      .filter(person => person.name.toLowerCase().indexOf(filter.toLowerCase()) !== -1)\r\n      .map(person => <Person key={person.id} person={person} deleteHandler={deleteHandler} />);\r\n};\r\n\r\nconst Alert = ({type, text}) => {\r\n  if(text === null) {\r\n    return null;\r\n  } else {\r\n    return <div className={`${type} alert`}>{text}</div>;  \r\n  }\r\n};\r\n\r\nconst App = () => {\r\n  const [ persons, setPersons ] = useState([]);\r\n  const [ newName, setNewName ] = useState('');\r\n  const [ newNumber, setNewNumber ] = useState('');\r\n  const [ newFilter, setNewFilter ] = useState('');\r\n  const [ alert, setAlert ] = useState({type:null, text:null});\r\n\r\n  useEffect(() => {\r\n    personService.getAll()\r\n      .then( persons => setPersons(persons));\r\n  }, []);\r\n\r\n  const handleNameChange = e => {\r\n    setNewName(e.target.value);\r\n  };\r\n\r\n  const handleNumberChange = e => {\r\n    setNewNumber(e.target.value);\r\n  };\r\n\r\n  const handleFilterChange = e => {\r\n    setNewFilter(e.target.value);\r\n  };\r\n\r\n  const handleFormSubmit = e => {\r\n    e.preventDefault();\r\n    if (newName !== '') {\r\n      if (isNameDuplicate(newName, persons)) {\r\n        const updatePersonConfirmed = window.confirm(`${newName} is already added to the phonebook, replace the old number with the new one?`);\r\n        if (updatePersonConfirmed) {\r\n          const personToUpdate = persons.find(person => person.name === newName);\r\n          const updatedPerson = {...personToUpdate, number:newNumber};\r\n          personService.update(personToUpdate.id, updatedPerson)\r\n            .then(updatedPerson => {\r\n              setPersons(persons.map(person => person.id === updatedPerson.id ? updatedPerson : person));\r\n              setNewName('');\r\n              setNewNumber('');}\r\n            )\r\n            .catch((error) => {\r\n              let errorMessage = `Information of ${newName} has already been removed from server`\r\n              if (error.response.data.error.errors.number &&\r\n                error.response.data.error.errors.number.name === 'ValidatorError') {\r\n                  errorMessage = error.response.data.error.message\r\n              }                \r\n              showAlert('error', errorMessage);\r\n            });\r\n        }\r\n      } else {\r\n        personService.create(newName, newNumber)\r\n        .then(createdPerson => {\r\n          setPersons(persons.concat(createdPerson));\r\n          showAlert('success', `Added ${newName}`);\r\n          setNewName('');\r\n          setNewNumber('');\r\n        })\r\n        .catch(error => {\r\n          showAlert('error', error.response.data.error.message);          \r\n        });\r\n      };  \r\n    };\r\n  };\r\n\r\n  const handleDeletePerson = (id) => {\r\n    const personName = persons.find(person => person.id === id).name;\r\n    const deleteConfirmed = window.confirm(`Delete ${personName}?`);\r\n    if (deleteConfirmed) {      \r\n      personService.remove(id)\r\n      .then(status => {\r\n        if (status === 204) {\r\n          setPersons(persons.filter(person => person.id !== id));\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const showAlert = (type ,text) => {\r\n    setAlert({type, text});\r\n    setTimeout(() => setAlert({type:null, text:null}),2000);\r\n  }\r\n\r\n  const isNameDuplicate = (newName, personsList) => {\r\n    return personsList.some((person) => person.name === newName);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      <Alert type={alert.type} text={alert.text}/>\r\n      <Filter searchValue={newFilter} changeHandler={handleFilterChange} />\r\n      <PersonForm \r\n        nameValue={newName}\r\n        nameChangedHandler={handleNameChange}\r\n        numberValue={newNumber}\r\n        numberChangedHandler={handleNumberChange}\r\n        submitHandler={handleFormSubmit} />\r\n      <h3>Numbers</h3>\r\n      <Persons persons={persons} filter={newFilter} deleteHandler={handleDeletePerson}/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}